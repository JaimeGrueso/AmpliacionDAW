{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome to MkDocs","text":"<p>For full documentation visit mkdocs.org.</p>"},{"location":"#commands","title":"Commands","text":"<ul> <li><code>mkdocs new [dir-name]</code> - Create a new project.</li> <li><code>mkdocs serve</code> - Start the live-reloading docs server.</li> <li><code>mkdocs build</code> - Build the documentation site.</li> <li><code>mkdocs -h</code> - Print help message and exit.</li> </ul>"},{"location":"#project-layout","title":"Project layout","text":"<pre><code>mkdocs.yml    # The configuration file.\ndocs/\n    index.md  # The documentation homepage.\n    ...       # Other markdown pages, images and other files.\n</code></pre>"},{"location":"ampliacion/","title":"Configuraci\u00f3n de un Servidor Nginx con Hosts Virtuales y Directorios de Usuario","text":""},{"location":"ampliacion/#conexion-ssh","title":"Conexion SSH","text":"<p>Para esta p\u00e1ctica trabajaremos desde nuestra propia m\u00e1quina anfitriona y nos conectaremos  a nuestra m\u00e1quina virtual de Debian mediante SSH. Para ello, abrimos una terminal y ejecutamos:</p> <p></p>"},{"location":"ampliacion/#creacion-de-usuarios","title":"Creacion de Usuarios","text":"<p>Para crear los usuarios en Debian, utilizamos el comando <code>useradd</code> seguido del nombre del usuario. Como se crear\u00e1 un directorio, se ejecutar\u00e1 el comando con la opci\u00f3n -m y -s para asignarle un directorio a cada usuario y un shell.</p> <p></p>"},{"location":"ampliacion/#creacion-de-las-carpetas-public_html","title":"Creaci\u00f3n de las Carpetas public_html","text":"<p>Para la creaci\u00f3n de las carpetas <code>public_html</code>, nos cambiaremos de usuario para poder crear dichas carpetas. Para ello, utilizamos el comando <code>su</code> seguido del nombre del usuario y <code>mkdir</code> para crear la carpeta.</p> <p></p>"},{"location":"ampliacion/#asignacion-de-permisos","title":"Asignaci\u00f3n de Permisos","text":"<p>Para asignar los permisos a las carpetas <code>public_html</code>, se cambiar\u00e1n las ACLs de la carpeta <code>public_html</code> para que Nginx no tenga problemas para leer, escribir y ejecutar en la carpeta.</p> <p>Este comando <code>setfacl</code> se utiliza para configurar las Listas de Control de Acceso (ACL) en el directorio <code>public_html</code>. Espec\u00edficamente:</p> <p><code>-d</code>: Establece las ACL predeterminadas (default) para el directorio4.</p> <p><code>-R</code>: Aplica los cambios de forma recursiva a todos los subdirectorios y archivos dentro de public_html3.</p> <p><code>-m</code>: Modifica las ACL existentes sin eliminar las anteriores5.</p> <p><code>u:www-data:rw</code>: Otorga permisos de lectura (r) y escritura (w) al usuario www-data</p> <p></p> <p></p>"},{"location":"ampliacion/#creacion-de-paginas-web-estaticas","title":"Creaci\u00f3n de P\u00e1ginas Web Est\u00e1ticas","text":"<p>Se crear\u00e1n dos archivos index.html, uno para cada usuario en las carpetas <code>public_html</code> de cada usuario. Esto servir\u00e1 para comprobar que todo est\u00e1 funcionando correctamente.</p> <p></p> <p></p>"},{"location":"ampliacion/#configuracion-de-nginx","title":"Configuraci\u00f3n de Nginx","text":"<p>Para instalar Nginx, utilizamos el comando <code>apt-get install nginx</code> y para comprobar que se ha instalado correctamente, utilizamos el comando <code>systemctl status nginx</code>. En mi caso ya ten\u00eda instalado Nginx, por lo que no fue necesario instalarlo. Se ejecutar\u00e1 el comando <code>systemctl status nginx</code> para comprobar que el servicio est\u00e1 activo.</p> <p></p> <p></p>"},{"location":"ampliacion/#generacion-de-certificados-ssl","title":"Generaci\u00f3n de Certificados SSL","text":"<p>Para generar los certificados SSL, utilizamos el comando <code>sudo openssl req -x509 -newkey rsa:4096 -keyout /etc/ssl/private/calistoweb.pem -out /etc/ssl/certs/calisto.pem -sha256 -days 365 --nodes</code>. Se nos pedir\u00e1n una serie de datos que deberemos rellenar. Lo mismo se debre\u00e1 hacer para el usuario <code>melibea</code>. </p> <p> </p>"},{"location":"ampliacion/#configuracion-de-los-hosts-virtuales","title":"Configuraci\u00f3n de los Hosts Virtuales","text":"<p>Para configurar los hosts virtuales, se crear\u00e1 un archivo de configuraci\u00f3n en la carpeta <code>/etc/nginx/sites-available</code> para cada usuario. En mi caso, he creado los archivos <code>calisto</code> y <code>melibea</code>. En estos archivos se configurar\u00e1n los hosts virtuales para cada usuario.</p> <p></p> <p></p> <p>Hecho esto, se habilitar\u00e1n los hosts virtuales con el comando <code>ln -s /etc/nginx/sites-available/calistoweb /etc/nginx/sites-enabled/</code> y <code>ln -s /etc/nginx/sites-available/melibeaweb /etc/nginx/sites-enabled/</code>. Al ejecitar estos comandos, se crear\u00e1n enlaces simb\u00f3licos en la carpeta <code>/etc/nginx/sites-enabled/</code> que apuntar\u00e1n a los archivos de configuraci\u00f3n de los hosts virtuales, como se puede apreciar en la siguiente imagen.</p> <p>Se ejecuta el comando <code>nginx -t</code> para comprobar que la configuraci\u00f3n de los hosts virtuales es correcta y reiniciamos el servicio de Nginx con el comando <code>systemctl restart nginx</code>.</p> <p></p>"},{"location":"ampliacion/#comprobacion-de-los-hosts-virtuales","title":"Comprobaci\u00f3n de los Hosts Virtuales","text":"<p>Se a\u00f1adir\u00e1n las direcciones IP y los nombres de los hosts virtuales en el archivo <code>C:\\Windows\\System32\\drivers\\etc\\hosts</code> de nuestra m\u00e1quina anfitriona.</p> <p></p>"},{"location":"ampliacion/#comprobacion-de-funcionamiento-de-los-hosts-virtuales","title":"Comprobaci\u00f3n de Funcionamiento de los Hosts Virtuales","text":"<p>Se intentar\u00e1 acceder a las p\u00e1ginas web de los usuarios <code>calisto</code> y <code>melibea</code> desde un navegador web. Para ello, se abrir\u00e1 un navegador web y se introducir\u00e1n las direcciones <code>https://calisto</code> y <code>https://melibea</code>.</p> <p></p> <p></p> <p>Al continuar y ver el certificado de seguridad, se podr\u00e1 comprobar que el certificado SSL es v\u00e1lido.</p> <p></p> <p></p> <p>Para finalizar, se clickar\u00e1 en el bot\u00f3n <code>Aceptar el riesgo y continuar</code> para acceder a la p\u00e1gina web. Y si todo ha ido bien, se podr\u00e1 ver la p\u00e1gina web del usuario <code>calisto</code> y <code>melibea</code>.</p> <p></p> <p></p> <p>Con esto concluye la pr\u00e1ctica de configuraci\u00f3n de un servidor Nginx con hosts virtuales y directorios de usuario.</p>"}]}